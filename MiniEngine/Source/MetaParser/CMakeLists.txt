set(TARGET_NAME MiniEngineParser)

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

file(GLOB_RECURSE HEADERS "*.h")
file(GLOB_RECURSE SOURCES "*.cpp")

source_group(TREE "${CMAKE_CURRENT_SOURCE_DIR}" FILES ${HEADERS} ${SOURCES})

set(LLVM_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/3rdParty/LLVM/include ${CMAKE_CURRENT_SOURCE_DIR}/3rdParty/mustache ${CMAKE_CURRENT_SOURCE_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${ENGINE_ROOT_DIR}/Bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${ENGINE_ROOT_DIR}/Bin)

include_directories(${LLVM_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR}/Parser)

add_executable(${TARGET_NAME} ${HEADERS} ${SOURCES})

set_target_properties(${TARGET_NAME} PROPERTIES CXX_STANDARD 17)
set_target_properties(${TARGET_NAME} PROPERTIES FOLDER "Tools")

if (CMAKE_HOST_WIN32)
    set(LLVM_LIBRARY_DIR ${CMAKE_CURRENT_SOURCE_DIR}/3rdParty/LLVM/lib/x64)
    set(LLVM_SHARED_LIBRARY_DIR ${CMAKE_CURRENT_SOURCE_DIR}/3rdParty/LLVM/bin/x64)
    set(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} /O2 /Ob2")
    target_link_libraries(${TARGET_NAME} ${LLVM_LIBRARY_DIR}/libclang.lib)
endif()

add_definitions(-DTIXML_USE_STL)

# copy resources on post build
add_custom_command(TARGET ${TARGET_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
        "${LLVM_SHARED_LIBRARY_DIR}"
        $<TARGET_FILE_DIR:${TARGET_NAME}>
)